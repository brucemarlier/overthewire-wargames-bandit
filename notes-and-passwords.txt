Notes

bandit1: n/a
bandit2: `-` is being treated as an option/argument to `cat` (or whatever command used to look at the `-` file), terminal is awaiting for user input, specify full path with `./` before `-`
bandit3: the file has blank spaces in it, which need to be 'escaped' with `\` before each blank space
bandit4: the file is hidden, meaning its name starts with `.`, so to uncover it, the option `-a` needs to be specified to the command `ls` to show hidden files/directories
bandit5: the file "file07" in the directory is the only one of ASCII type or human readable
bandit6: check for any file with a size of 1033 bytes, use the "-size" parameter for the "find" command and specify "1033c", then look at the file type with "file" to check if it's human readable, if it is check with "ls -la" to make sure it's ot executable, file ".file2" is the only match
bandit7: use find to search through the entire server ("/"), but because a lot of "Permission denied" messages, it's hard to see which file matches, so use "-exec" parameter to execute two additional bash commands "file" and "grep" to isolate the result
bandit8: use command "cat" to look content of file and pipe it into "grep" and use "sed" and "tr" to isolate the password
bandit9: use "sort" command to sort each line, then use "uniq" command with "-u" parameter to show only the one line that does not repeat
bandit10: use strings command to show only readable chars, use grep with a regex parameter to find only the lines starting with multiple "=" chars, remove unwanted infos with sed and tr commands
bandit11: use -d parameter for base64 command to decode the file data.txt 
bandit12: use the command tr to "translate" the string so it uses the alphabet with its letters shifted by 13 positions
bandit13: basically first need to decode the hexdump with xxd, then use commands "gzip" "bzip2" "tar" to decompress a few times the files until it becomes a file with ASCII text in it
bandit14: copy/paste rsa private key from home directory into file on computer, make it executable, use -i option of ssh command to use private key file as authenticator for the next Level
bandit15: 


Level passwords

bandit1: ZjLjTmM6FvvyRnrb2rfNWOZOTa6ip5If
bandit2: 263JGJPfgU6LtdEvgfWU1XP5yac29mFx
bandit3: MNk8KNH3Usiio41PRUEoDFPqfxLPlSmx
bandit4: 2WmrDFRmJIq3IPxneAaMGhap0pFhF3NJ
bandit5: 4oQYVPkxZOOEOO5pTW81FB8j8lxXGUQw
bandit6: HWasnPhtq9AVKe0dmk45nxy20cvUa6EG
bandit7: morbNTDkSW6jIlUc0ymOdMaLnOlFVAaj
bandit8: dfwvzFQi4mU0wfNbFOe9RoWskMLg7eEc
bandit9: 4CKMh1JI91bUIZZPXDqGanal4xvAg0JM
bandit10: FGUW5ilLVJrxX9kMYMmlN4MgbpfMiqey
bandit11: dtR173fZKb0RRsDFSGsg2RWnpNVj3qRr
bandit12: 7x16WNeHIi5YkIhWsfFIqoognUTyj9Q4
bandit13: FO5dwFsc0cbaIiH0h8J2eUks2vdTDwAn
bandit14: No password, use 'ssh -i <rsa private key file> bandit14@...'
bandit15: 